{"version":3,"sources":["Form.js","CurrentWeather.js","SavedLocations.js","ErrorMessage.js","App.js","index.js"],"names":["Form","props","render","onSubmit","e","preventDefault","state","inputValue","type","placeholder","placeholderText","onChange","value","target","setState","React","Component","CurrentWeather","console","log","className","id","weatherName","src","weatherIcon","alt","weatherTemp","weatherTempRange","weatherHumidity","weatherDescription","onClick","onSave","SavedLocations","savedLocations","map","location","key","href","onLocationClick","onLocationRemoved","ErrorMessage","App","componentDidMount","makeApiRequest","query","isError","searchQuery","saveQuery","length","removeQuery","filteredList","filter","savedLocation","localStorage","setItem","JSON","stringify","includes","newSavedLocations","concat","fetch","then","response","json","data","status","name","weather","icon","parseInt","main","temp","String","fromCharCode","temp_min","temp_max","humidity","description","error","parse","getItem","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.edff32c1.chunk.js","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inputValue: \"\"\n        };\n    }\n\n    render = () => {\n        return (\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    this.props.onSubmit(this.state.inputValue);\n                }}\n            >\n                <input\n                    type=\"text\"\n                    placeholder={this.props.placeholderText}\n                    onChange={(e) => {\n                        var value = e.target.value;\n                        this.setState({\n                            inputValue: value\n                        });\n                    }}\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n        );\n    }\n}\n\nexport default Form;\n","import React from \"react\";\n\nclass CurrentWeather extends React.Component {\n    render = () => {\n        console.log('props', this.props);\n        return (\n            <div className=\"weather-data col-md-6\">\n                <h2 id=\"weather-name\">{this.props.weatherName}</h2>\n                <img id=\"weather-icon\" src={this.props.weatherIcon} alt=\"weather icon\"/>\n                <p id=\"weather-temp\">{this.props.weatherTemp}</p>\n                <p id=\"weather-temp-range\">{this.props.weatherTempRange}</p>\n                <p id=\"weather-humidity\">{this.props.weatherHumidity}</p>\n                <p id=\"weather-description\">{this.props.weatherDescription}</p>\n                <button\n                    id=\"weather-save\"\n                    onClick={(e) => {\n                        e.preventDefault();\n                        this.props.onSave();\n                    }}\n                >Save</button>\n            </div>\n        );\n    }\n}\n\nexport default CurrentWeather;\n","import React from 'react';\n\nclass SavedLocations extends React.Component {\n    render = () => {\n        return (\n            <div id=\"location-list\" className=\"weather-queries col-md-6\">\n                <h2>Saved Locations</h2>\n                <ul id=\"weather-list\" className=\"list-group\">\n                    {this.props.savedLocations.map((location) => {\n                        return (\n                            <li className=\"list-group-item\" key={location}>\n                                <a href=\"#\" className=\"query-name\" onClick={(e) => {\n                                    e.preventDefault();\n                                    this.props.onLocationClick(location);\n                                }}>{location}</a>\n                                <a href=\"#\" className=\"remove-query\" onClick={(e) => {\n                                    e.preventDefault();\n                                    this.props.onLocationRemoved(location);\n                                }}>Remove</a>\n                            </li>\n                        );\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default SavedLocations;\n","import React from \"react\";\n\nclass ErrorMessage extends React.Component {\n    render = () => {\n        return (\n            <div id=\"error-message\" className=\"col-md-6\">\n                <h2>Sorry, that location doesn't appear to be valid. Please enter a valid city name or zip code.</h2>\n            </div>\n        );\n    }\n}\n\nexport default ErrorMessage;\n","import React from 'react';\nimport Form from './Form';\nimport CurrentWeather from './CurrentWeather';\nimport SavedLocations from './SavedLocations';\nimport ErrorMessage from './ErrorMessage';\n\nimport './App.css';\n\nvar API_KEY = \"571ea973dc2cdd20ba0988f71e0d2887\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            weatherName: \"\",\n            savedLocations: JSON.parse(localStorage.getItem(\"weather-queries\"))\n        };\n    }\n\n    componentDidMount = () => {\n        this.makeApiRequest(this.state.savedLocations[0]);\n    }\n\n    render = () => {\n        return (\n            <div>\n                <h1>React Weather</h1>\n                <h3>Welcome back.</h3>\n                <h3>Where in the world are you interested in?</h3>\n                <Form\n                    placeholderText=\"ie. Seattle, 98115\"\n                    onSubmit={(query) => {\n                        this.makeApiRequest(query);\n                    }}\n                />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {!this.state.isError ? (\n                            <CurrentWeather\n                                weatherName={this.state.weatherName}\n                                weatherIcon={this.state.weatherIcon}\n                                weatherTemp={this.state.weatherTemp}\n                                weatherTempRange={this.state.weatherTempRange}\n                                weatherHumidity={this.state.weatherHumidity}\n                                weatherDescription={this.state.weatherDescription}\n                                onSave={() => {\n                                    console.log('saved', this.state.searchQuery);\n                                    this.saveQuery(this.state.searchQuery);\n                                }}\n                            />\n                        ) : (\n                            <ErrorMessage/>\n                        )}\n                        {this.state.savedLocations.length !== 0 && (\n                            <SavedLocations\n                                savedLocations={this.state.savedLocations}\n                                onLocationClick={(location) => {\n                                    console.log('click', location);\n                                    this.makeApiRequest(location);\n                                }}\n                                onLocationRemoved={(location) => {\n                                    console.log('removed', location);\n                                    this.removeQuery(location);\n                                }}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    removeQuery = (query) => {\n        var filteredList = this.state.savedLocations.filter(function (savedLocation) {\n            return query !== savedLocation;\n        });\n        this.setState({\n            savedLocations: filteredList\n        });\n        localStorage.setItem(\"weather-queries\", JSON.stringify(filteredList));\n    }\n\n    saveQuery = (query) => {\n        if (!this.state.savedLocations.includes(query)) {\n            var newSavedLocations = this.state.savedLocations.concat([ query ]);\n            this.setState({\n                savedLocations: newSavedLocations\n            });\n            localStorage.setItem(\"weather-queries\", JSON.stringify(newSavedLocations));\n        }\n    }\n\n    makeApiRequest = (query) => {\n        var url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + query + \"&appid=\" + API_KEY + \"&units=imperial\";\n        var fetchPromise = fetch(url);\n        fetchPromise.then((response) => {\n            console.log('response', response);\n            response.json().then((data) => {\n                if (response.status === 200) {\n                    this.setState({\n                        weatherName: data.name,\n                        weatherIcon: \"http://openweathermap.org/img/wn/\" + data.weather[0].icon + \"@2x.png\",\n                        weatherTemp: \"Temperature: \" + parseInt(data.main.temp, 10) + String.fromCharCode(176),\n                        weatherTempRange: \"Low: \" + parseInt(data.main.temp_min, 10) + String.fromCharCode(176) + \" High: \" + parseInt(data.main.temp_max, 10) + String.fromCharCode(176),\n                        weatherHumidity: \"Humidity: \" + data.main.humidity + \"%\",\n                        weatherDescription: data.weather[0].main + \" (\" + data.weather[0].description + \")\",\n                        searchQuery: query,\n                        isError: false\n                    });\n                } else {\n                    console.error('error', data);\n                    this.setState({\n                        isError: true\n                    });\n                }\n            });\n        });\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport App from './App';\nimport ReactDOM from 'react-dom';\n\n// eslint-disable-next-line\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}