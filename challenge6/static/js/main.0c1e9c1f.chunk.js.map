{"version":3,"sources":["Form.js","CurrentWeather.js","SavedLocations.js","ErrorMessage.js","App.js","index.js"],"names":["Form","props","render","onSubmit","e","preventDefault","state","inputValue","type","placeholder","placeholderText","onChange","value","target","setState","React","Component","CurrentWeather","console","log","className","id","weatherName","src","weatherIcon","alt","weatherTemp","weatherTempRange","weatherHumidity","weatherDescription","onClick","onSave","SavedLocations","savedLocations","map","location","key","href","onLocationClick","onLocationRemoved","ErrorMessage","API_KEY","App","componentDidMount","makeApiRequest","query","isError","searchQuery","saveQuery","length","removeQuery","filteredList","filter","savedLocation","localStorage","setItem","JSON","stringify","includes","newSavedLocations","concat","fetch","then","response","json","data","status","name","weather","icon","parseInt","main","temp","String","fromCharCode","temp_min","temp_max","humidity","description","error","parse","getItem","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0c1e9c1f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            inputValue: \"\"\r\n        };\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    this.props.onSubmit(this.state.inputValue);\r\n                }}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={this.props.placeholderText}\r\n                    onChange={(e) => {\r\n                        var value = e.target.value;\r\n                        this.setState({\r\n                            inputValue: value\r\n                        });\r\n                    }}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nclass CurrentWeather extends React.Component {\r\n    render = () => {\r\n        console.log('props', this.props);\r\n        return (\r\n            <div className=\"weather-data col-md-6\">\r\n                <h2 id=\"weather-name\">{this.props.weatherName}</h2>\r\n                <img id=\"weather-icon\" src={this.props.weatherIcon} alt=\"weather icon\"/>\r\n                <p id=\"weather-temp\">{this.props.weatherTemp}</p>\r\n                <p id=\"weather-temp-range\">{this.props.weatherTempRange}</p>\r\n                <p id=\"weather-humidity\">{this.props.weatherHumidity}</p>\r\n                <p id=\"weather-description\">{this.props.weatherDescription}</p>\r\n                <button\r\n                    id=\"weather-save\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        this.props.onSave();\r\n                    }}\r\n                >Save</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from 'react';\r\n\r\nclass SavedLocations extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div id=\"location-list\" className=\"weather-queries col-md-6\">\r\n                <h2>Saved Locations</h2>\r\n                <ul id=\"weather-list\" className=\"list-group\">\r\n                    {this.props.savedLocations.map((location) => {\r\n                        return (\r\n                            <li className=\"list-group-item\" key={location}>\r\n                                <a href=\"#\" className=\"query-name\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    this.props.onLocationClick(location);\r\n                                }}>{location}</a>\r\n                                <a href=\"#\" className=\"remove-query\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    this.props.onLocationRemoved(location);\r\n                                }}>Remove</a>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SavedLocations;\r\n","import React from \"react\";\r\n\r\nclass ErrorMessage extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div id=\"error-message\" className=\"col-md-6\">\r\n                <h2>Sorry, that location doesn't appear to be valid. Please enter a valid city name or zip code.</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport Form from './Form';\r\nimport CurrentWeather from './CurrentWeather';\r\nimport SavedLocations from './SavedLocations';\r\nimport ErrorMessage from './ErrorMessage';\r\n\r\nimport './App.css';\r\n\r\nvar API_KEY = \"571ea973dc2cdd20ba0988f71e0d2887\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            weatherName: \"\",\r\n            savedLocations: JSON.parse(localStorage.getItem(\"weather-queries\"))\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.makeApiRequest(this.state.savedLocations[0]);\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <h1>React Weather</h1>\r\n                <h3>Welcome back.</h3>\r\n                <h3>Where in the world are you interested in?</h3>\r\n                <Form\r\n                    placeholderText=\"ie. Seattle, 98115\"\r\n                    onSubmit={(query) => {\r\n                        this.makeApiRequest(query);\r\n                    }}\r\n                />\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {!this.state.isError ? (\r\n                            <CurrentWeather\r\n                                weatherName={this.state.weatherName}\r\n                                weatherIcon={this.state.weatherIcon}\r\n                                weatherTemp={this.state.weatherTemp}\r\n                                weatherTempRange={this.state.weatherTempRange}\r\n                                weatherHumidity={this.state.weatherHumidity}\r\n                                weatherDescription={this.state.weatherDescription}\r\n                                onSave={() => {\r\n                                    console.log('saved', this.state.searchQuery);\r\n                                    this.saveQuery(this.state.searchQuery);\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <ErrorMessage/>\r\n                        )}\r\n                        {this.state.savedLocations.length !== 0 && (\r\n                            <SavedLocations\r\n                                savedLocations={this.state.savedLocations}\r\n                                onLocationClick={(location) => {\r\n                                    console.log('click', location);\r\n                                    this.makeApiRequest(location);\r\n                                }}\r\n                                onLocationRemoved={(location) => {\r\n                                    console.log('removed', location);\r\n                                    this.removeQuery(location);\r\n                                }}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    removeQuery = (query) => {\r\n        var filteredList = this.state.savedLocations.filter(function (savedLocation) {\r\n            return query !== savedLocation;\r\n        });\r\n        this.setState({\r\n            savedLocations: filteredList\r\n        });\r\n        localStorage.setItem(\"weather-queries\", JSON.stringify(filteredList));\r\n    }\r\n\r\n    saveQuery = (query) => {\r\n        if (!this.state.savedLocations.includes(query)) {\r\n            var newSavedLocations = this.state.savedLocations.concat([ query ]);\r\n            this.setState({\r\n                savedLocations: newSavedLocations\r\n            });\r\n            localStorage.setItem(\"weather-queries\", JSON.stringify(newSavedLocations));\r\n        }\r\n    }\r\n\r\n    makeApiRequest = (query) => {\r\n        var url = \"https://api.openweathermap.org/data/2.5/weather?q=\" + query + \"&appid=\" + API_KEY + \"&units=imperial\";\r\n        var fetchPromise = fetch(url);\r\n        fetchPromise.then((response) => {\r\n            console.log('response', response);\r\n            response.json().then((data) => {\r\n                if (response.status === 200) {\r\n                    this.setState({\r\n                        weatherName: data.name,\r\n                        weatherIcon: \"http://openweathermap.org/img/wn/\" + data.weather[0].icon + \"@2x.png\",\r\n                        weatherTemp: \"Temperature: \" + parseInt(data.main.temp, 10) + String.fromCharCode(176),\r\n                        weatherTempRange: \"Low: \" + parseInt(data.main.temp_min, 10) + String.fromCharCode(176) + \" High: \" + parseInt(data.main.temp_max, 10) + String.fromCharCode(176),\r\n                        weatherHumidity: \"Humidity: \" + data.main.humidity + \"%\",\r\n                        weatherDescription: data.weather[0].main + \" (\" + data.weather[0].description + \")\",\r\n                        searchQuery: query,\r\n                        isError: false\r\n                    });\r\n                } else {\r\n                    console.error('error', data);\r\n                    this.setState({\r\n                        isError: true\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport App from './App';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// eslint-disable-next-line\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}